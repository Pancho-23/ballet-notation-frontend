1) Database Design:

Use MongoDB for storing the ballet steps and classes. 
Design the database schema to store information about users, ballet steps, ballet classes, moderation files, ratings, and rejection points. Define relationships between different entities if necessary.

2) Backend Development:

Develop a backend server using  Node.js with Express.
Implement user authentication using OAuth. This will involve registration, login, and authentication endpoints.
Set up endpoints for uploading ballet steps and classes to the database. Implement validation and moderation logic to ensure uploaded files meet the required criteria.
Create endpoints for moderation, including fetching moderation files, submitting moderation results, and handling rejection points.
Implement functionality for handling ratings and calculating averages for ballet steps and classes.

3) Frontend Development:

Integrate your React frontend with the backend server using HTTP requests (e.g., Axios or Fetch API).
Develop user interfaces for user registration, login, and authentication.
Create forms and interfaces for uploading ballet steps and classes, as well as viewing and moderating them.
Display ratings and other relevant information about ballet steps and classes on the frontend.

4) Authentication and Authorization:

Implement authentication middleware on the backend to verify JWT tokens and restrict access to authenticated users.
Ensure that only authorized users (e.g., ClassCreators) have access to certain endpoints and functionalities, such as uploading ballet steps and classes.

5) Moderation Process:

Develop a robust moderation process that includes fetching moderation files, displaying them to moderators, and collecting moderation results.
Implement logic to calculate rejection points and enforce penalties for repeated rejections.
Create mechanisms for tracking moderation failing points and ensuring that users take the moderation process seriously.

6) Database Interaction:

Implement CRUD (Create, Read, Update, Delete) operations for interacting with the database.
Ensure that data is stored securely and that sensitive information is protected.

7) Testing and Deployment:

Test your application thoroughly to ensure that it works as expected and handles various scenarios, including user authentication, file uploads, moderation, and database interactions.
Deploy your application to a hosting provider such as AWS, Heroku, or DigitalOcean, making sure to configure security settings and monitor performance.

8) Documentation and Support:

Provide documentation for users on how to use the application, including instructions for registration, uploading files, moderating, and viewing ratings.
Set up support channels (e.g., email, chat) to assist users with any issues or questions they may have.
By following these steps, you should be able to successfully implement your Ballet Notation System project, complete with user authentication, moderation process, and database functionality. Make sure to continuously monitor and update your application as needed to ensure its security, reliability, and usability.